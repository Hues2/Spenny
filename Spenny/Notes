APP FUNCTIONALITY:

- User can set monthly income
- This monthly income is the amount that the user will start with at the start of each month
- User can input monthly direct debits, which wil be automatically deducted at the start of each month from the "monthly income"
- User can set a "Savings Goal" at the start of each month
- At the end of the month, if money is left over, then this will be counted as the "saved amount"
- Depending on the "Savings Goal" amd the actual "savings amount", the number will be green (if saved money (+)) or red (no savings (-)) depending on the 2 values



APP DESIGN:

- Home page will display the remaining amount for the month at the top
- Under this header, there will be a simple list of income and outcomes for that month so far
- Top of the list will have a "+" button to add a spend
- The header will have a small "Savings Goal", where a simple alert with the users saving goal can be inputted
- If there is  asavings goal, then under the total remaining amount, there will be a percentage
    that represents the amount over or under the goal

- Second view will be a list with all of the previous months



APP TODO:

- Add validation for the texfields
- An empty list will be above the add direct debit text
- When the add direct debit text is pressed, the view below it (AddTransaction) will appear
- The text will then dissapear, so that the user cant make the addTransaction view dissappear
- Once the user clicks the save or delete button, the Transaction will be added to the list (in this case, to the list of direct debits), and then it will appear in the list
- All the data in the add transaction view will be wiped aand then it will be taken off the screen
- And then the add direct debit text will appear again


- On home screen, show a progressview
- In the init of the view model, it will try to get the data
- If it gets data, then display it
- If it can't get the data, then set it to nil, and stop showing the progressview, and show the get started button
- In init of data manager, try to get the data from core data
- Pass the data manager down through dependency injection


- When user adds a direct debit or a payment, add a horizontal scrollview with these types with their icon and name inside a color pill shape





WORKING ON NOW:

    - Save the sorting value in user defaults too
    



In top left of trackview, display the total amount that the currently displayed transactions is worth
The amount remaining will always be the total remaining, but this value will show the total that the filtered transactions is worth (will probably always be negative)
